server:
  # port 0 은 랜덤 포트
  port: 0
  servlet:
    encoding:
      charset: utf-8
# log
#logging:
#  level:
#    org.springframework: debug
spring:
  datasource:
    url: jdbc:h2:mem:test
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    defer-datasource-initialization: true # hibernate 와 .sql 순번 조정
    generate-ddl: true #  해당 데이터를 근거로 서버 시작 시점에 DDL문을 생성하여 DB에 적용한다.
  messages:
    basename: messages
  security:
    user:
      name: user
      password: seek
  # 유레카에 등록할 이름
  application:
    name: microservice1
# 유레카 설정
eureka:
  lease-expiration-duration-in-seconds: 2 # 디스커버리는 서비스 등록 해제 하기 전에 마지막 하트비트에서부터 2초 기다림
  instance:
    lease-renewal-interval-in-seconds: 1 #하트비트 인터벌
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:5001/eureka
# swagger2
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
management:
  endpoints:
    web:
      exposure:
        include: "*"
# swagger3
springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    path: /swagger-ui/index.html
    disable-swagger-default-url: true
    #display-query-params-without-oauth2: true
