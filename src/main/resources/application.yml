server:
  port: 5000
  servlet:
    encoding:
      charset: utf-8
logging:
  level:
    org.springframework: debug
spring:
  datasource:
   url: jdbc:h2:mem:test
   driver-class-name: org.h2.Driver
   username: sa
   password: 
  h2:
    console:
      enabled: true
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl 
    show-sql: true
    defer-datasource-initialization: true # hibernate 와 .sql 순번 조정
    generate-ddl: true #  해당 데이터를 근거로 서버 시작 시점에 DDL문을 생성하여 DB에 적용한다.
  messages:
    basename: messages
  security:
    user:
      name: user
      password: seek
# swagger2
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
management:
  endpoints:
    web:
      exposure:
        include: "*"
# swagger3
springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    path: /swagger-ui/index.html
    disable-swagger-default-url: true
    display-query-params-without-oauth2: true
